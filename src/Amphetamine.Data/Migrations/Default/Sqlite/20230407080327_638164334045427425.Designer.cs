// <auto-generated />
using System;
using Amphetamine.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Amphetamine.Data.Migrations.Default.Sqlite
{
    [DbContext(typeof(DefaultContext))]
    [Migration("20230407080327_638164334045427425")]
    partial class _638164334045427425
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.15");

            modelBuilder.Entity("Amphetamine.Data.Entities.Setting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("Type")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(7);

                    b.Property<string>("Value")
                        .HasColumnType("varchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("Key")
                        .IsUnique();

                    b.ToTable("db_default_Settings", (string)null);
                });

            modelBuilder.Entity("Amphetamine.Data.Entities.Track", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Album")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("AlbumArtist")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("AlbumKey")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Artist")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<long?>("BitRate")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("Count")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateFileCreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateFileModified")
                        .HasColumnType("datetime");

                    b.Property<long?>("DateLastPlayed")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateLastSynced")
                        .HasColumnType("datetime");

                    b.Property<long?>("DiscCount")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("DiscNumber")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("Duration")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FileName")
                        .HasColumnType("varchar(500)");

                    b.Property<long?>("FileSize")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Genre")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<long?>("HasLyrics")
                        .HasColumnType("INTEGER");

                    b.Property<string>("IndexingFailureReason")
                        .HasColumnType("varchar(500)");

                    b.Property<long?>("IndexingSuccess")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("Love")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MimeType")
                        .HasColumnType("varchar(500)");

                    b.Property<long?>("NeedsAlbumArtworkIndexing")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("NeedsIndexing")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("Number")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Path")
                        .HasColumnType("varchar(500)");

                    b.Property<long?>("PlayCount")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("Rating")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SafePath")
                        .HasColumnType("varchar(500)");

                    b.Property<long?>("SampleRate")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("SkipCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<long?>("Year")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Album");

                    b.HasIndex("Artist");

                    b.HasIndex("DateAdded");

                    b.HasIndex("DateFileModified");

                    b.HasIndex("DateLastPlayed");

                    b.HasIndex("DateLastSynced");

                    b.HasIndex("Genre");

                    b.HasIndex("Title");

                    b.HasIndex("Year");

                    b.ToTable("db_default_Tracks", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
